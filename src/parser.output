Terminals unused in grammar

   UPLUS


State 135 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | statements

    3 statements: statement NEWLINE
    4           | statements statement NEWLINE

    5 statement: func_def
    6          | assignment
    7          | call
    8          | while_loop
    9          | for_loop
   10          | if_else
   11          | return
   12          | BREAK
   13          | CONTINUE

   14 assignment: id ASSIGN expr
   15           | id LSQUARE expr RSQUARE ASSIGN expr

   16 func_def: DEF id LPAREN empty_list RPAREN NEWLINE statements END
   17         | DEF id LPAREN empty_list RPAREN NEWLINE RETURN expr NEWLINE END
   18         | DEF id LPAREN empty_list RPAREN NEWLINE statements RETURN expr NEWLINE END
   19         | DEF id LPAREN params RPAREN NEWLINE statements END
   20         | DEF id LPAREN params RPAREN NEWLINE RETURN expr NEWLINE END
   21         | DEF id LPAREN params RPAREN NEWLINE statements RETURN expr NEWLINE END

   22 return: RETURN expr

   23 params: ID
   24       | params COMMA ID

   25 call: id LPAREN empty_list RPAREN
   26     | id LPAREN list_items RPAREN

   27 list: LSQUARE empty_list RSQUARE
   28     | LSQUARE list_items RSQUARE

   29 empty_list: /* empty */

   30 list_items: expr
   31           | list_items COMMA expr

   32 list_index: expr LSQUARE expr RSQUARE

   33 while_loop: WHILE cond DO NEWLINE statements DONE

   34 for_loop: FOR id IN expr DO NEWLINE statements DONE

   35 if_else: IF cond THEN NEWLINE statements END
   36        | IF cond THEN NEWLINE statements ELSE NEWLINE statements END

   37 cond: expr
   38     | expr NEWLINE

   39 id: ID

   40 expr: INT
   41     | FLOAT
   42     | STRING
   43     | id
   44     | expr PLUS expr
   45     | expr MINUS expr
   46     | expr TIMES expr
   47     | expr DIVIDE expr
   48     | expr POW expr
   49     | expr MOD expr
   50     | expr LTHAN expr
   51     | expr GTHAN expr
   52     | expr NOTEQ expr
   53     | expr EQUAL expr
   54     | expr LTHEQ expr
   55     | expr GTHEQ expr
   56     | expr LGOR expr
   57     | expr LGAND expr
   58     | expr BWXOR expr
   59     | expr BWOR expr
   60     | expr BWAND expr
   61     | BWNOT expr
   62     | LGNOT expr
   63     | MINUS expr
   64     | LPAREN expr RPAREN
   65     | list_index
   66     | list
   67     | call


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 40
FLOAT (259) 41
STRING (260) 42
ID (261) 23 24 39
NEWLINE (262) 3 4 16 17 18 19 20 21 33 34 35 36 38
COMMA (263) 24 31
WHILE (264) 33
FOR (265) 34
IN (266) 34
DO (267) 33 34
DONE (268) 33 34
BREAK (269) 12
CONTINUE (270) 13
IF (271) 35 36
THEN (272) 35 36
ELSE (273) 36
END (274) 16 17 18 19 20 21 35 36
DEF (275) 16 17 18 19 20 21
RETURN (276) 17 18 20 21 22
LGAND (277) 57
LGOR (278) 56
BWAND (279) 60
BWXOR (280) 58
BWOR (281) 59
NOTEQ (282) 52
EQUAL (283) 53
GTHEQ (284) 55
GTHAN (285) 51
LTHEQ (286) 54
LTHAN (287) 50
MINUS (288) 45 63
PLUS (289) 44
MOD (290) 49
DIVIDE (291) 47
TIMES (292) 46
POW (293) 48
RPAREN (294) 16 17 18 19 20 21 25 26 64
LPAREN (295) 16 17 18 19 20 21 25 26 64
RSQUARE (296) 15 27 28 32
LSQUARE (297) 15 27 28 32
ASSIGN (298) 14 15
BWNOT (299) 61
LGNOT (300) 62
UBWNOT (301)
ULGNOT (302)
UMINUS (303)
UPLUS (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2, on right: 0
statements (52)
    on left: 3 4, on right: 2 4 16 18 19 21 33 34 35 36
statement (53)
    on left: 5 6 7 8 9 10 11 12 13, on right: 3 4
assignment (54)
    on left: 14 15, on right: 6
func_def (55)
    on left: 16 17 18 19 20 21, on right: 5
return (56)
    on left: 22, on right: 11
params (57)
    on left: 23 24, on right: 19 20 21 24
call (58)
    on left: 25 26, on right: 7 67
list (59)
    on left: 27 28, on right: 66
empty_list (60)
    on left: 29, on right: 16 17 18 25 27
list_items (61)
    on left: 30 31, on right: 26 28 31
list_index (62)
    on left: 32, on right: 65
while_loop (63)
    on left: 33, on right: 8
for_loop (64)
    on left: 34, on right: 9
if_else (65)
    on left: 35 36, on right: 10
cond (66)
    on left: 37 38, on right: 33 35 36
id (67)
    on left: 39, on right: 14 15 16 17 18 19 20 21 25 26 34 43
expr (68)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63 64 65 66 67, on right: 14 15 17 18 20 21 22 30
    31 32 34 37 38 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64


state 0

    0 $accept: . program $end

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    $default  reduce using rule 1 (program)

    program     go to state 9
    statements  go to state 10
    statement   go to state 11
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 1

   39 id: ID .

    $default  reduce using rule 39 (id)


state 2

   33 while_loop: WHILE . cond DO NEWLINE statements DONE

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    cond        go to state 31
    id          go to state 32
    expr        go to state 33


state 3

   34 for_loop: FOR . id IN expr DO NEWLINE statements DONE

    ID  shift, and go to state 1

    id  go to state 34


state 4

   12 statement: BREAK .

    $default  reduce using rule 12 (statement)


state 5

   13 statement: CONTINUE .

    $default  reduce using rule 13 (statement)


state 6

   35 if_else: IF . cond THEN NEWLINE statements END
   36        | IF . cond THEN NEWLINE statements ELSE NEWLINE statements END

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    cond        go to state 35
    id          go to state 32
    expr        go to state 33


state 7

   16 func_def: DEF . id LPAREN empty_list RPAREN NEWLINE statements END
   17         | DEF . id LPAREN empty_list RPAREN NEWLINE RETURN expr NEWLINE END
   18         | DEF . id LPAREN empty_list RPAREN NEWLINE statements RETURN expr NEWLINE END
   19         | DEF . id LPAREN params RPAREN NEWLINE statements END
   20         | DEF . id LPAREN params RPAREN NEWLINE RETURN expr NEWLINE END
   21         | DEF . id LPAREN params RPAREN NEWLINE statements RETURN expr NEWLINE END

    ID  shift, and go to state 1

    id  go to state 36


state 8

   22 return: RETURN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 37


state 9

    0 $accept: program . $end

    $end  shift, and go to state 38


state 10

    2 program: statements .
    4 statements: statements . statement NEWLINE

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    $default  reduce using rule 2 (program)

    statement   go to state 39
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 11

    3 statements: statement . NEWLINE

    NEWLINE  shift, and go to state 40


state 12

    6 statement: assignment .

    $default  reduce using rule 6 (statement)


state 13

    5 statement: func_def .

    $default  reduce using rule 5 (statement)


state 14

   11 statement: return .

    $default  reduce using rule 11 (statement)


state 15

    7 statement: call .

    $default  reduce using rule 7 (statement)


state 16

    8 statement: while_loop .

    $default  reduce using rule 8 (statement)


state 17

    9 statement: for_loop .

    $default  reduce using rule 9 (statement)


state 18

   10 statement: if_else .

    $default  reduce using rule 10 (statement)


state 19

   14 assignment: id . ASSIGN expr
   15           | id . LSQUARE expr RSQUARE ASSIGN expr
   25 call: id . LPAREN empty_list RPAREN
   26     | id . LPAREN list_items RPAREN

    LPAREN   shift, and go to state 41
    LSQUARE  shift, and go to state 42
    ASSIGN   shift, and go to state 43


state 20

   40 expr: INT .

    $default  reduce using rule 40 (expr)


state 21

   41 expr: FLOAT .

    $default  reduce using rule 41 (expr)


state 22

   42 expr: STRING .

    $default  reduce using rule 42 (expr)


state 23

   63 expr: MINUS . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 44


state 24

   64 expr: LPAREN . expr RPAREN

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 45


state 25

   27 list: LSQUARE . empty_list RSQUARE
   28     | LSQUARE . list_items RSQUARE

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    $default  reduce using rule 29 (empty_list)

    call        go to state 28
    list        go to state 29
    empty_list  go to state 46
    list_items  go to state 47
    list_index  go to state 30
    id          go to state 32
    expr        go to state 48


state 26

   61 expr: BWNOT . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 49


state 27

   62 expr: LGNOT . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 50


state 28

   67 expr: call .

    $default  reduce using rule 67 (expr)


state 29

   66 expr: list .

    $default  reduce using rule 66 (expr)


state 30

   65 expr: list_index .

    $default  reduce using rule 65 (expr)


state 31

   33 while_loop: WHILE cond . DO NEWLINE statements DONE

    DO  shift, and go to state 51


state 32

   25 call: id . LPAREN empty_list RPAREN
   26     | id . LPAREN list_items RPAREN
   43 expr: id .

    LPAREN  shift, and go to state 41

    $default  reduce using rule 43 (expr)


state 33

   32 list_index: expr . LSQUARE expr RSQUARE
   37 cond: expr .
   38     | expr . NEWLINE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    NEWLINE  shift, and go to state 52
    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 37 (cond)


state 34

   34 for_loop: FOR id . IN expr DO NEWLINE statements DONE

    IN  shift, and go to state 71


state 35

   35 if_else: IF cond . THEN NEWLINE statements END
   36        | IF cond . THEN NEWLINE statements ELSE NEWLINE statements END

    THEN  shift, and go to state 72


state 36

   16 func_def: DEF id . LPAREN empty_list RPAREN NEWLINE statements END
   17         | DEF id . LPAREN empty_list RPAREN NEWLINE RETURN expr NEWLINE END
   18         | DEF id . LPAREN empty_list RPAREN NEWLINE statements RETURN expr NEWLINE END
   19         | DEF id . LPAREN params RPAREN NEWLINE statements END
   20         | DEF id . LPAREN params RPAREN NEWLINE RETURN expr NEWLINE END
   21         | DEF id . LPAREN params RPAREN NEWLINE statements RETURN expr NEWLINE END

    LPAREN  shift, and go to state 73


state 37

   22 return: RETURN expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 22 (return)


state 38

    0 $accept: program $end .

    $default  accept


state 39

    4 statements: statements statement . NEWLINE

    NEWLINE  shift, and go to state 74


state 40

    3 statements: statement NEWLINE .

    $default  reduce using rule 3 (statements)


state 41

   25 call: id LPAREN . empty_list RPAREN
   26     | id LPAREN . list_items RPAREN

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    $default  reduce using rule 29 (empty_list)

    call        go to state 28
    list        go to state 29
    empty_list  go to state 75
    list_items  go to state 76
    list_index  go to state 30
    id          go to state 32
    expr        go to state 48


state 42

   15 assignment: id LSQUARE . expr RSQUARE ASSIGN expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 77


state 43

   14 assignment: id ASSIGN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 78


state 44

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr
   63     | MINUS expr .

    $default  reduce using rule 63 (expr)


state 45

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr
   64     | LPAREN expr . RPAREN

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    RPAREN   shift, and go to state 79
    LSQUARE  shift, and go to state 70


state 46

   27 list: LSQUARE empty_list . RSQUARE

    RSQUARE  shift, and go to state 80


state 47

   28 list: LSQUARE list_items . RSQUARE
   31 list_items: list_items . COMMA expr

    COMMA    shift, and go to state 81
    RSQUARE  shift, and go to state 82


state 48

   30 list_items: expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 30 (list_items)


state 49

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr
   61     | BWNOT expr .

    $default  reduce using rule 61 (expr)


state 50

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr
   62     | LGNOT expr .

    $default  reduce using rule 62 (expr)


state 51

   33 while_loop: WHILE cond DO . NEWLINE statements DONE

    NEWLINE  shift, and go to state 83


state 52

   38 cond: expr NEWLINE .

    $default  reduce using rule 38 (cond)


state 53

   57 expr: expr LGAND . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 84


state 54

   56 expr: expr LGOR . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 85


state 55

   60 expr: expr BWAND . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 86


state 56

   58 expr: expr BWXOR . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 87


state 57

   59 expr: expr BWOR . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 88


state 58

   52 expr: expr NOTEQ . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 89


state 59

   53 expr: expr EQUAL . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 90


state 60

   55 expr: expr GTHEQ . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 91


state 61

   51 expr: expr GTHAN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 92


state 62

   54 expr: expr LTHEQ . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 93


state 63

   50 expr: expr LTHAN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 94


state 64

   45 expr: expr MINUS . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 95


state 65

   44 expr: expr PLUS . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 96


state 66

   49 expr: expr MOD . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 97


state 67

   47 expr: expr DIVIDE . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 98


state 68

   46 expr: expr TIMES . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 99


state 69

   48 expr: expr POW . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 100


state 70

   32 list_index: expr LSQUARE . expr RSQUARE

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 101


state 71

   34 for_loop: FOR id IN . expr DO NEWLINE statements DONE

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 102


state 72

   35 if_else: IF cond THEN . NEWLINE statements END
   36        | IF cond THEN . NEWLINE statements ELSE NEWLINE statements END

    NEWLINE  shift, and go to state 103


state 73

   16 func_def: DEF id LPAREN . empty_list RPAREN NEWLINE statements END
   17         | DEF id LPAREN . empty_list RPAREN NEWLINE RETURN expr NEWLINE END
   18         | DEF id LPAREN . empty_list RPAREN NEWLINE statements RETURN expr NEWLINE END
   19         | DEF id LPAREN . params RPAREN NEWLINE statements END
   20         | DEF id LPAREN . params RPAREN NEWLINE RETURN expr NEWLINE END
   21         | DEF id LPAREN . params RPAREN NEWLINE statements RETURN expr NEWLINE END

    ID  shift, and go to state 104

    $default  reduce using rule 29 (empty_list)

    params      go to state 105
    empty_list  go to state 106


state 74

    4 statements: statements statement NEWLINE .

    $default  reduce using rule 4 (statements)


state 75

   25 call: id LPAREN empty_list . RPAREN

    RPAREN  shift, and go to state 107


state 76

   26 call: id LPAREN list_items . RPAREN
   31 list_items: list_items . COMMA expr

    COMMA   shift, and go to state 81
    RPAREN  shift, and go to state 108


state 77

   15 assignment: id LSQUARE expr . RSQUARE ASSIGN expr
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    RSQUARE  shift, and go to state 109
    LSQUARE  shift, and go to state 70


state 78

   14 assignment: id ASSIGN expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 14 (assignment)


state 79

   64 expr: LPAREN expr RPAREN .

    $default  reduce using rule 64 (expr)


state 80

   27 list: LSQUARE empty_list RSQUARE .

    $default  reduce using rule 27 (list)


state 81

   31 list_items: list_items COMMA . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 110


state 82

   28 list: LSQUARE list_items RSQUARE .

    $default  reduce using rule 28 (list)


state 83

   33 while_loop: WHILE cond DO NEWLINE . statements DONE

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statements  go to state 111
    statement   go to state 11
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 84

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   57     | expr LGAND expr .
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 57 (expr)


state 85

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   56     | expr LGOR expr .
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 56 (expr)


state 86

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr
   60     | expr BWAND expr .

    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 60 (expr)


state 87

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   58     | expr BWXOR expr .
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 58 (expr)


state 88

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   59     | expr BWOR expr .
   60     | expr . BWAND expr

    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 59 (expr)


state 89

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   52     | expr NOTEQ expr .
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 52 (expr)


state 90

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   53     | expr EQUAL expr .
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 53 (expr)


state 91

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   55     | expr GTHEQ expr .
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 55 (expr)


state 92

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   51     | expr GTHAN expr .
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 51 (expr)


state 93

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   54     | expr LTHEQ expr .
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 54 (expr)


state 94

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   50     | expr LTHAN expr .
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 50 (expr)


state 95

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   45     | expr MINUS expr .
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 45 (expr)


state 96

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   44     | expr PLUS expr .
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 44 (expr)


state 97

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   49     | expr MOD expr .
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 49 (expr)


state 98

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   47     | expr DIVIDE expr .
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 47 (expr)


state 99

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   46     | expr TIMES expr .
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 46 (expr)


state 100

   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   48     | expr POW expr .
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LSQUARE  shift, and go to state 70

    $default  reduce using rule 48 (expr)


state 101

   32 list_index: expr . LSQUARE expr RSQUARE
   32           | expr LSQUARE expr . RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    RSQUARE  shift, and go to state 112
    LSQUARE  shift, and go to state 70


state 102

   32 list_index: expr . LSQUARE expr RSQUARE
   34 for_loop: FOR id IN expr . DO NEWLINE statements DONE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    DO       shift, and go to state 113
    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70


state 103

   35 if_else: IF cond THEN NEWLINE . statements END
   36        | IF cond THEN NEWLINE . statements ELSE NEWLINE statements END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statements  go to state 114
    statement   go to state 11
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 104

   23 params: ID .

    $default  reduce using rule 23 (params)


state 105

   19 func_def: DEF id LPAREN params . RPAREN NEWLINE statements END
   20         | DEF id LPAREN params . RPAREN NEWLINE RETURN expr NEWLINE END
   21         | DEF id LPAREN params . RPAREN NEWLINE statements RETURN expr NEWLINE END
   24 params: params . COMMA ID

    COMMA   shift, and go to state 115
    RPAREN  shift, and go to state 116


state 106

   16 func_def: DEF id LPAREN empty_list . RPAREN NEWLINE statements END
   17         | DEF id LPAREN empty_list . RPAREN NEWLINE RETURN expr NEWLINE END
   18         | DEF id LPAREN empty_list . RPAREN NEWLINE statements RETURN expr NEWLINE END

    RPAREN  shift, and go to state 117


state 107

   25 call: id LPAREN empty_list RPAREN .

    $default  reduce using rule 25 (call)


state 108

   26 call: id LPAREN list_items RPAREN .

    $default  reduce using rule 26 (call)


state 109

   15 assignment: id LSQUARE expr RSQUARE . ASSIGN expr

    ASSIGN  shift, and go to state 118


state 110

   31 list_items: list_items COMMA expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 31 (list_items)


state 111

    4 statements: statements . statement NEWLINE
   33 while_loop: WHILE cond DO NEWLINE statements . DONE

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    DONE      shift, and go to state 119
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statement   go to state 39
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 112

   32 list_index: expr LSQUARE expr RSQUARE .

    $default  reduce using rule 32 (list_index)


state 113

   34 for_loop: FOR id IN expr DO . NEWLINE statements DONE

    NEWLINE  shift, and go to state 120


state 114

    4 statements: statements . statement NEWLINE
   35 if_else: IF cond THEN NEWLINE statements . END
   36        | IF cond THEN NEWLINE statements . ELSE NEWLINE statements END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    ELSE      shift, and go to state 121
    END       shift, and go to state 122
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statement   go to state 39
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 115

   24 params: params COMMA . ID

    ID  shift, and go to state 123


state 116

   19 func_def: DEF id LPAREN params RPAREN . NEWLINE statements END
   20         | DEF id LPAREN params RPAREN . NEWLINE RETURN expr NEWLINE END
   21         | DEF id LPAREN params RPAREN . NEWLINE statements RETURN expr NEWLINE END

    NEWLINE  shift, and go to state 124


state 117

   16 func_def: DEF id LPAREN empty_list RPAREN . NEWLINE statements END
   17         | DEF id LPAREN empty_list RPAREN . NEWLINE RETURN expr NEWLINE END
   18         | DEF id LPAREN empty_list RPAREN . NEWLINE statements RETURN expr NEWLINE END

    NEWLINE  shift, and go to state 125


state 118

   15 assignment: id LSQUARE expr RSQUARE ASSIGN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 126


state 119

   33 while_loop: WHILE cond DO NEWLINE statements DONE .

    $default  reduce using rule 33 (while_loop)


state 120

   34 for_loop: FOR id IN expr DO NEWLINE . statements DONE

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statements  go to state 127
    statement   go to state 11
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 121

   36 if_else: IF cond THEN NEWLINE statements ELSE . NEWLINE statements END

    NEWLINE  shift, and go to state 128


state 122

   35 if_else: IF cond THEN NEWLINE statements END .

    $default  reduce using rule 35 (if_else)


state 123

   24 params: params COMMA ID .

    $default  reduce using rule 24 (params)


state 124

   19 func_def: DEF id LPAREN params RPAREN NEWLINE . statements END
   20         | DEF id LPAREN params RPAREN NEWLINE . RETURN expr NEWLINE END
   21         | DEF id LPAREN params RPAREN NEWLINE . statements RETURN expr NEWLINE END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 129

    statements  go to state 130
    statement   go to state 11
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 125

   16 func_def: DEF id LPAREN empty_list RPAREN NEWLINE . statements END
   17         | DEF id LPAREN empty_list RPAREN NEWLINE . RETURN expr NEWLINE END
   18         | DEF id LPAREN empty_list RPAREN NEWLINE . statements RETURN expr NEWLINE END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 131

    statements  go to state 132
    statement   go to state 11
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 126

   15 assignment: id LSQUARE expr RSQUARE ASSIGN expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    $default  reduce using rule 15 (assignment)


state 127

    4 statements: statements . statement NEWLINE
   34 for_loop: FOR id IN expr DO NEWLINE statements . DONE

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    DONE      shift, and go to state 133
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statement   go to state 39
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 128

   36 if_else: IF cond THEN NEWLINE statements ELSE NEWLINE . statements END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statements  go to state 134
    statement   go to state 11
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 129

   20 func_def: DEF id LPAREN params RPAREN NEWLINE RETURN . expr NEWLINE END
   22 return: RETURN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 135


state 130

    4 statements: statements . statement NEWLINE
   19 func_def: DEF id LPAREN params RPAREN NEWLINE statements . END
   21         | DEF id LPAREN params RPAREN NEWLINE statements . RETURN expr NEWLINE END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    END       shift, and go to state 136
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 137

    statement   go to state 39
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 131

   17 func_def: DEF id LPAREN empty_list RPAREN NEWLINE RETURN . expr NEWLINE END
   22 return: RETURN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 138


state 132

    4 statements: statements . statement NEWLINE
   16 func_def: DEF id LPAREN empty_list RPAREN NEWLINE statements . END
   18         | DEF id LPAREN empty_list RPAREN NEWLINE statements . RETURN expr NEWLINE END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    END       shift, and go to state 139
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 140

    statement   go to state 39
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 133

   34 for_loop: FOR id IN expr DO NEWLINE statements DONE .

    $default  reduce using rule 34 (for_loop)


state 134

    4 statements: statements . statement NEWLINE
   36 if_else: IF cond THEN NEWLINE statements ELSE NEWLINE statements . END

    ID        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    BREAK     shift, and go to state 4
    CONTINUE  shift, and go to state 5
    IF        shift, and go to state 6
    END       shift, and go to state 141
    DEF       shift, and go to state 7
    RETURN    shift, and go to state 8

    statement   go to state 39
    assignment  go to state 12
    func_def    go to state 13
    return      go to state 14
    call        go to state 15
    while_loop  go to state 16
    for_loop    go to state 17
    if_else     go to state 18
    id          go to state 19


state 135

   20 func_def: DEF id LPAREN params RPAREN NEWLINE RETURN expr . NEWLINE END
   22 return: RETURN expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    NEWLINE  shift, and go to state 142
    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    NEWLINE  [reduce using rule 22 (return)]


state 136

   19 func_def: DEF id LPAREN params RPAREN NEWLINE statements END .

    $default  reduce using rule 19 (func_def)


state 137

   21 func_def: DEF id LPAREN params RPAREN NEWLINE statements RETURN . expr NEWLINE END
   22 return: RETURN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 143


state 138

   17 func_def: DEF id LPAREN empty_list RPAREN NEWLINE RETURN expr . NEWLINE END
   22 return: RETURN expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    NEWLINE  shift, and go to state 144
    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    NEWLINE  [reduce using rule 22 (return)]


state 139

   16 func_def: DEF id LPAREN empty_list RPAREN NEWLINE statements END .

    $default  reduce using rule 16 (func_def)


state 140

   18 func_def: DEF id LPAREN empty_list RPAREN NEWLINE statements RETURN . expr NEWLINE END
   22 return: RETURN . expr

    INT      shift, and go to state 20
    FLOAT    shift, and go to state 21
    STRING   shift, and go to state 22
    ID       shift, and go to state 1
    MINUS    shift, and go to state 23
    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25
    BWNOT    shift, and go to state 26
    LGNOT    shift, and go to state 27

    call        go to state 28
    list        go to state 29
    list_index  go to state 30
    id          go to state 32
    expr        go to state 145


state 141

   36 if_else: IF cond THEN NEWLINE statements ELSE NEWLINE statements END .

    $default  reduce using rule 36 (if_else)


state 142

   20 func_def: DEF id LPAREN params RPAREN NEWLINE RETURN expr NEWLINE . END

    END  shift, and go to state 146


state 143

   21 func_def: DEF id LPAREN params RPAREN NEWLINE statements RETURN expr . NEWLINE END
   22 return: RETURN expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    NEWLINE  shift, and go to state 147
    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    NEWLINE  [reduce using rule 22 (return)]


state 144

   17 func_def: DEF id LPAREN empty_list RPAREN NEWLINE RETURN expr NEWLINE . END

    END  shift, and go to state 148


state 145

   18 func_def: DEF id LPAREN empty_list RPAREN NEWLINE statements RETURN expr . NEWLINE END
   22 return: RETURN expr .
   32 list_index: expr . LSQUARE expr RSQUARE
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . POW expr
   49     | expr . MOD expr
   50     | expr . LTHAN expr
   51     | expr . GTHAN expr
   52     | expr . NOTEQ expr
   53     | expr . EQUAL expr
   54     | expr . LTHEQ expr
   55     | expr . GTHEQ expr
   56     | expr . LGOR expr
   57     | expr . LGAND expr
   58     | expr . BWXOR expr
   59     | expr . BWOR expr
   60     | expr . BWAND expr

    NEWLINE  shift, and go to state 149
    LGAND    shift, and go to state 53
    LGOR     shift, and go to state 54
    BWAND    shift, and go to state 55
    BWXOR    shift, and go to state 56
    BWOR     shift, and go to state 57
    NOTEQ    shift, and go to state 58
    EQUAL    shift, and go to state 59
    GTHEQ    shift, and go to state 60
    GTHAN    shift, and go to state 61
    LTHEQ    shift, and go to state 62
    LTHAN    shift, and go to state 63
    MINUS    shift, and go to state 64
    PLUS     shift, and go to state 65
    MOD      shift, and go to state 66
    DIVIDE   shift, and go to state 67
    TIMES    shift, and go to state 68
    POW      shift, and go to state 69
    LSQUARE  shift, and go to state 70

    NEWLINE  [reduce using rule 22 (return)]


state 146

   20 func_def: DEF id LPAREN params RPAREN NEWLINE RETURN expr NEWLINE END .

    $default  reduce using rule 20 (func_def)


state 147

   21 func_def: DEF id LPAREN params RPAREN NEWLINE statements RETURN expr NEWLINE . END

    END  shift, and go to state 150


state 148

   17 func_def: DEF id LPAREN empty_list RPAREN NEWLINE RETURN expr NEWLINE END .

    $default  reduce using rule 17 (func_def)


state 149

   18 func_def: DEF id LPAREN empty_list RPAREN NEWLINE statements RETURN expr NEWLINE . END

    END  shift, and go to state 151


state 150

   21 func_def: DEF id LPAREN params RPAREN NEWLINE statements RETURN expr NEWLINE END .

    $default  reduce using rule 21 (func_def)


state 151

   18 func_def: DEF id LPAREN empty_list RPAREN NEWLINE statements RETURN expr NEWLINE END .

    $default  reduce using rule 18 (func_def)
